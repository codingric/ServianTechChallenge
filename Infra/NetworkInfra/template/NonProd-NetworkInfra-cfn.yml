AWSTemplateFormatVersion: 2010-09-09
Description: Deploys the HTTP gateway in API-GW Account.

Conditions:
  IsProd: !Equals [!Ref EnvPrefix, prod]

Parameters:
  EnvPrefix:
    Type: String
    Description: Cochlear environment.
    AllowedValues:
      - NonProd
      - Prod

  VpcCidrBlock:
    Type: String
  


Resources:
  EnvVpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidrBlock
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: !Sub "${EnvPrefix}-Vpc"

  EnvInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: stack
        Value: !Sub "${EnvPrefix}-Vpc"

  VpcIgWAttach:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties: 
      InternetGatewayId: !Ref EnvInternetGateway
      VpcId: !Ref EnvVpc


  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref EnvVpc
      Tags:
      - Key: Name
        Value: !Sub "${EnvPrefix}-PublicRoute"

  PublicSubnetARoute:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnetA

  PublicSubnetBRoute:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnetB

  PublicSubnetCRoute:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnetC


  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: EnvInternetGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref EnvInternetGateway

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref EnvVpc
      Tags:
      - Key: Name
        Value: !Sub "${EnvPrefix}-PrivatecRoute"

  PrivateRoute:
    Type: AWS::EC2::Route
    DependsOn: EnvInternetGateway
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATGateWay

  PrivateSubnetARoute:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnetA

  PrivateSubnetBRoute:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnetB

  PrivateSubnetCRoute:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnetC


  NatEIP:
    DependsOn: EnvInternetGateway
    Type: AWS::EC2::EIP
    Properties:
        Domain: vpc

  NATGateWay:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatEIP.AllocationId
      SubnetId:
        Ref: PublicSubnetA
      Tags:
      - Key: Name
        Value: !Sub "${EnvPrefix}-NatGateway"



  PrivateSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: ap-southeast-2a
      CidrBlock: 10.0.1.0/24
      VpcId: !Ref EnvVpc
      Tags:
        - Key: Name
          Value: 
            !Join 
            - ''
            - - !Ref EnvPrefix
              - '-'
              - PrivateSubnetA

  PrivateSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: ap-southeast-2b
      CidrBlock: 10.0.2.0/24
      VpcId: !Ref EnvVpc
      Tags:
        - Key: Name
          Value: 
            !Join 
            - ''
            - - !Ref EnvPrefix
              - '-'
              - PrivateSubnetB

  PrivateSubnetC:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: ap-southeast-2c
      CidrBlock: 10.0.3.0/24
      VpcId: !Ref EnvVpc
      Tags:
        - Key: Name
          Value: 
            !Join 
            - ''
            - - !Ref EnvPrefix
              - '-'
              - PrivateSubnetC


  PublicSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: ap-southeast-2a
      CidrBlock: 10.0.4.0/24
      VpcId: !Ref EnvVpc
      Tags:
        - Key: Name
          Value: 
            !Join 
            - ''
            - - !Ref EnvPrefix
              - '-'
              - PublicSubnetA

  PublicSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: ap-southeast-2b
      CidrBlock: 10.0.5.0/24
      VpcId: !Ref EnvVpc
      Tags:
        - Key: Name
          Value: 
            !Join 
            - ''
            - - !Ref EnvPrefix
              - '-'
              - PublicSubnetB

  PublicSubnetC:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: ap-southeast-2c
      CidrBlock: 10.0.6.0/24
      VpcId: !Ref EnvVpc
      Tags:
        - Key: Name
          Value: 
            !Join 
            - ''
            - - !Ref EnvPrefix
              - '-'
              - PublicSubnetC


Outputs:
  VpcID:
    Value: !Ref EnvVpc
    Export:
      Name: !Sub "${EnvPrefix}-VpcID"

  NonProdPrivateSubnetA:
    Value: !Ref PrivateSubnetA
    Export: 
      Name: NonProdPrivateSubnetA

  NonProdPrivateSubnetB:
    Value: !Ref PrivateSubnetB
    Export: 
      Name: NonProdPrivateSubnetB

  NonProdPrivateSubnetC:
    Value: !Ref PrivateSubnetC
    Export: 
      Name: NonProdPrivateSubnetC


  NonProdPublicSubnetA:
    Value: !Ref PublicSubnetA
    Export: 
      Name: NonProdPublicSubnetA

  NonProdPublicSubnetB:
    Value: !Ref PublicSubnetB
    Export: 
      Name: NonProdPublicSubnetB

  NonProdPublicSubnetC:
    Value: !Ref PublicSubnetC
    Export: 
      Name: NonProdPublicSubnetC

