AWSTemplateFormatVersion: 2010-09-09
Description: Deploys the HTTP gateway in API-GW Account.

Conditions:
  IsProd: !Equals [!Ref EnvPrefix, prod]

Parameters:
  EnvPrefix:
    Type: String
    Description: Cochlear environment.
    AllowedValues:
      - NonProd
      - Prod

  VpcCidrBlock:
    Type: String
  


Resources:
  EnvVpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidrBlock
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: !Sub "${EnvPrefix}-Vpc"

  EnvInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: stack
        Value: !Sub "${EnvPrefix}-Vpc"

  VpcIgWAttach:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties: 
      InternetGatewayId: !Ref EnvInternetGateway
      VpcId: !Ref EnvVpc


  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref EnvVpc
      Tags:
      - Key: Name
        Value: !Sub "${EnvPrefix}-PublicRoute"

{% for PublicSubnet in PublicSubnets %}
  {{ PublicSubnet.name }}Route:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref {{ PublicSubnet.name }}

{% endfor %}

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: EnvInternetGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref EnvInternetGateway

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref EnvVpc
      Tags:
      - Key: Name
        Value: !Sub "${EnvPrefix}-PrivatecRoute"

  PrivateRoute:
    Type: AWS::EC2::Route
    DependsOn: EnvInternetGateway
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATGateWay

{% for PrivateSubnet in PrivateSubnets %}
  {{ PrivateSubnet.name }}Route:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref {{ PrivateSubnet.name }}

{% endfor %}

  NatEIP:
    DependsOn: EnvInternetGateway
    Type: AWS::EC2::EIP
    Properties:
        Domain: vpc

  NATGateWay:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatEIP.AllocationId
      SubnetId:
        Ref: PublicSubnetA
      Tags:
      - Key: Name
        Value: !Sub "${EnvPrefix}-NatGateway"



{% for PrivateSubnet in PrivateSubnets %}
  {{ PrivateSubnet.name }}:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: {{ PrivateSubnet.az }}
      CidrBlock: {{ PrivateSubnet.CidrBlock }}
      VpcId: !Ref EnvVpc
      Tags:
        - Key: Name
          Value: 
            !Join 
            - ''
            - - !Ref EnvPrefix
              - '-'
              - {{ PrivateSubnet.name }}

{% endfor %}

{% for PublicSubnet in PublicSubnets %}
  {{ PublicSubnet.name }}:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: {{ PublicSubnet.az }}
      CidrBlock: {{ PublicSubnet.CidrBlock }}
      VpcId: !Ref EnvVpc
      Tags:
        - Key: Name
          Value: 
            !Join 
            - ''
            - - !Ref EnvPrefix
              - '-'
              - {{ PublicSubnet.name }}

{% endfor %}

Outputs:
  VpcID:
    Value: !Ref EnvVpc
    Export:
      Name: !Sub "${EnvPrefix}-VpcID"

{% for PrivateSubnet in PrivateSubnets %}
  {{ EnvPrefix }}{{ PrivateSubnet.name }}:
    Value: !Ref {{ PrivateSubnet.name }}
    Export: 
      Name: {{ EnvPrefix }}{{ PrivateSubnet.name }}

{% endfor %}

{% for PublicSubnet in PublicSubnets %}
  {{ EnvPrefix }}{{ PublicSubnet.name }}:
    Value: !Ref {{ PublicSubnet.name }}
    Export: 
      Name: {{ EnvPrefix }}{{ PublicSubnet.name }}

{% endfor %}
