AWSTemplateFormatVersion: 2010-09-09
Description: Deploys codepipeline for documentDB used in MobileApp

Metadata:
  Author: Amit Erande <amit.erande@servian.com>
  RepoUrl: https://bitbucket.airnz.co.nz/projects/EIT/repos/mobileapp-documentdb/

Parameters:
  Email:
    Type: String

  EnvPrefix:
    Type: String

  EnvPrefixLower:
    Type: String

  Application:
    Type: String

  ArtifactsBucket:
    Type: String

Resources:
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${AWS::StackName}-CodeBuild-ServiceRole"
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/job-function/DatabaseAdministrator
        - arn:aws:iam::aws:policy/job-function/NetworkAdministrator
        - arn:aws:iam::aws:policy/PowerUserAccess

  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${AWS::StackName}-CodePipeline-ServiceRole"
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSCodePipelineFullAccess
        - arn:aws:iam::aws:policy/AWSCodePipeline_FullAccess
      Path: /
      Policies:
        - PolicyName: CodepipelineInline
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action:
                  - sns:*
                Resource: "*"
                Effect: Allow
              - Action:
                  - s3:Put*
                  - s3:List*
                  - s3:Get*
                Resource:
                  - !Sub "arn:aws:s3:::${ArtifactsBucket}/*"
                  - !Sub "arn:aws:s3:::${ArtifactsBucket}"
                Effect: Allow
              - Action:
                  - events:*
                Resource:
                  - !Sub "arn:aws:events:${AWS::Region}:${AWS::AccountId}:rule/${AWS::StackName}-S3-event"
                Effect: Allow
              - Action:
                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild
                Resource:
                  - !Sub "arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/${AWS::StackName}*"
                Effect: Allow
              - Action:
                  - codestar-connections:ListTagsForResource
                  - codestar-connections:GetConnection
                  - codestar-connections:UseConnection
                Resource: "arn:aws:codestar-connections:ap-southeast-2:852998739144:connection/64ce87be-41f1-496d-a487-74dc9eab7726"
                Effect: Allow
              - Action:
                  - codestar-connections:List*
                Resource: "*"
                Effect: Allow

  CodeBuildEvent:
    Type: AWS::Events::Rule
    Properties:
      Description: "AWS event rule to notify when build failed or stopped"
      EventPattern:
        source:
          - aws.codebuild
        detail-type:
          - CodeBuild Build State Change
        detail:
          build-status:
            - FAILED
          project-name:
            - !Ref AppInfraBuild
          # - !Ref CodeBuildTest
          # - !Ref CodeBuildQual
          # - !Ref CodeBuildProd
      Name: !Sub "${AWS::StackName}-CodeBuild-event"
      # RoleArn: !GetAtt ECREventRole.Arn
      State: ENABLED
      Targets:
        - Id: !GetAtt CodePipelineTopic.TopicName
          Arn: !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${AWS::StackName}-Topic"
          InputTransformer:
            InputPathsMap:
              {
                "build-id": "$.detail.build-id",
                "project-name": "$.detail.project-name",
                "build-status": "$.detail.build-status",
              }
            InputTemplate: '"Build <build-id> for build project <project-name> has been FAILED. Please investigate this failure."'

  AppInfraBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "${AWS::StackName}-AppInfraBuild"
      Description: !Sub "Build to deploy the application infra in ${EnvPrefix} environment."
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        ArtifactIdentifier: AppBuildArtifact
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: Environment
            Value: !Ref EnvPrefix
          - Name: AccountID
            Value: !Sub "${AWS::AccountId}"
      Source:
        Type: CODEPIPELINE
        BuildSpec: "Infra/AppInfra/build_spec_app_infra.yml"

  RDSInfraBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "${AWS::StackName}-RdsInfraBuild"
      Description: !Sub "Build to deploy the rds infra in ${EnvPrefix} environment."
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        ArtifactIdentifier: RdsBuildArtifact
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: Environment
            Value: !Ref EnvPrefix
          - Name: AccountID
            Value: !Sub "${AWS::AccountId}"
      Source:
        Type: CODEPIPELINE
        BuildSpec: "Infra/RdsInfra/build_spec_rds.yml"

  NetworkInfraBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "${AWS::StackName}-NetworkInfraBuild"
      Description: "Build to deploy the Network infra."
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        ArtifactIdentifier: NetworkBuildArtifact
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: Environment
            Value: !Ref EnvPrefix
          - Name: AccountID
            Value: !Sub "${AWS::AccountId}"
      Source:
        Type: CODEPIPELINE
        BuildSpec: "Infra/NetworkInfra/build_spec_network_infra.yml"

  ECRImageBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "${AWS::StackName}-EcrImageBuild"
      Description: !Sub "Build to create the ECR image of ${Application}."
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        ArtifactIdentifier: EcrImageBuildArtifact
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: ENVPREFIX
            Value: !Ref EnvPrefixLower
          - Name: AWS_ACCOUNTID
            Value: !Sub "${AWS::AccountId}"
          - Name: AWS_REGION
            Value: !Sub "${AWS::Region}"
      Source:
        Type: CODEPIPELINE
        BuildSpec: "app/build_spec_app.yml"

  CodePipelineTopic:
    Type: "AWS::SNS::Topic"
    Properties:
      TopicName: !Sub "${AWS::StackName}-Topic"
      DisplayName: !Sub "${AWS::StackName}-codepipelineTopic to notify pipeline messages"
      Subscription:
        - Protocol: "email"
          Endpoint: !Ref Email

  CodePipelineTopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      PolicyDocument:
        {
          "Version": "2008-10-17",
          "Id": "__default_policy_ID",
          "Statement":
            [
              {
                "Sid": "__default_statement_ID",
                "Effect": "Allow",
                "Principal": { "AWS": "*" },
                "Action":
                  [
                    "SNS:GetTopicAttributes",
                    "SNS:SetTopicAttributes",
                    "SNS:AddPermission",
                    "SNS:RemovePermission",
                    "SNS:DeleteTopic",
                    "SNS:Subscribe",
                    "SNS:ListSubscriptionsByTopic",
                    "SNS:Publish",
                    "SNS:Receive",
                  ],
                "Resource": !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${AWS::StackName}-Topic",
                "Condition":
                  {
                    "StringEquals":
                      { "AWS:SourceOwner": !Sub "${AWS::AccountId}" },
                  },
              },
              {
                "Sid": "Allow_Publish_Events",
                "Effect": "Allow",
                "Principal": { "Service": "events.amazonaws.com" },
                "Action": "sns:Publish",
                "Resource": !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${AWS::StackName}-Topic",
              },
            ],
        }
      Topics:
        - !Ref CodePipelineTopic

  EventRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${AWS::StackName}-EventRole"
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: events.amazonaws.com
        Version: "2012-10-17"
      Policies:
        - PolicyName: codepipelineInline
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - codepipeline:StartPipelineExecution
                Resource:
                  - !Sub "arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${AWS::StackName}-AppInfra"

  ECREvent:
    Type: AWS::Events::Rule
    Properties:
      Description: !Sub "Amazon CloudWatch Events rule to automatically start the ${AWS::StackName}-AppInfra pipeline when a change occurs in the Amazon ECR repo"
      EventPattern:
        source:
          - aws.ecr
        detail-type:
          - ECR Image Action
        detail:
          action-type: [PUSH]
          repository-name: [cwe-test]
          result: [SUCCESS]
      Name: !Sub "${AWS::StackName}-ecr-event"
      State: ENABLED
      Targets:
        - Id: !Ref AppInfraCodePipeline
          Arn: !Sub "arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${AWS::StackName}-AppInfra"
          RoleArn: !GetAtt EventRole.Arn

  AppInfraCodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref ArtifactsBucket
        Type: S3
      Name: !Sub "${AWS::StackName}-AppInfra"
      RestartExecutionOnUpdate: False
      RoleArn: !GetAtt CodePipelineRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: Github-Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: "1"
              Configuration:
                ConnectionArn: "arn:aws:codestar-connections:ap-southeast-2:852998739144:connection/64ce87be-41f1-496d-a487-74dc9eab7726"
                FullRepositoryId: "ErandeAmit/ServianTechChallenge"
                BranchName: "app-infra-non-prod"
                OutputArtifactFormat: "CODE_ZIP"
              OutputArtifacts:
                - Name: S3SourceAppInfra
              RunOrder: 1
            - Name: ECR-Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: ECR
                Version: "1"
              Configuration:
                RepositoryName: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${EnvPrefixLower}-serviantestapp"
                ImageTag: "latest"
                # OutputArtifactFormat: "CODE_ZIP"
              OutputArtifacts:
                - Name: SourceECRBuild
              RunOrder: 1
        - Name: !Sub "${EnvPrefix}-AppInfra-Build"
          Actions:
            - Name: !Sub "${EnvPrefix}-AppInfra-Build"
              InputArtifacts:
                - Name: S3SourceAppInfra
                - Name: SourceECRBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Region: !Ref AWS::Region
              Configuration:
                ProjectName: !Ref AppInfraBuild
                PrimarySource: S3SourceArtifacts
              OutputArtifacts:
                - Name: !Sub "${EnvPrefix}-AppInfra-Build"
              RunOrder: 1

  RdsInfraCodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref ArtifactsBucket
        Type: S3
      Name: !Sub "${AWS::StackName}-RdsInfra"
      RestartExecutionOnUpdate: False
      RoleArn: !GetAtt CodePipelineRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: Github-Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: "1"
              Configuration:
                ConnectionArn: "arn:aws:codestar-connections:ap-southeast-2:852998739144:connection/64ce87be-41f1-496d-a487-74dc9eab7726"
                FullRepositoryId: "ErandeAmit/ServianTechChallenge"
                BranchName: "rds-infra-non-prod"
                OutputArtifactFormat: "CODE_ZIP"
              OutputArtifacts:
                - Name: S3SourceRdsInfra
              RunOrder: 1
        - Name: !Sub "${EnvPrefix}-Rdsnfra-Build"
          Actions:
            - Name: !Sub "${EnvPrefix}-RdsInfra-Build"
              InputArtifacts:
                - Name: S3SourceRdsInfra
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Region: !Ref AWS::Region
              Configuration:
                ProjectName: !Ref RDSInfraBuild
                PrimarySource: S3SourceRdsInfra
              OutputArtifacts:
                - Name: !Sub "${EnvPrefix}-RdsInfra-Build"
              RunOrder: 1

  NetworkInfraCodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref ArtifactsBucket
        Type: S3
      Name: !Sub "${AWS::StackName}-NetworkInfra"
      RestartExecutionOnUpdate: False
      RoleArn: !GetAtt CodePipelineRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: Github-Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: "1"
              Configuration:
                ConnectionArn: "arn:aws:codestar-connections:ap-southeast-2:852998739144:connection/64ce87be-41f1-496d-a487-74dc9eab7726"
                FullRepositoryId: "ErandeAmit/ServianTechChallenge"
                BranchName: "network-infra"
                OutputArtifactFormat: "CODE_ZIP"
              OutputArtifacts:
                - Name: S3SourceNetworkInfra
              RunOrder: 1
        - Name: !Sub "${EnvPrefix}-NetworkInfra-Build"
          Actions:
            - Name: !Sub "${EnvPrefix}-NetworkInfra-Build"
              InputArtifacts:
                - Name: S3SourceNetworkInfra
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Region: !Ref AWS::Region
              Configuration:
                ProjectName: !Ref NetworkInfraBuild
                PrimarySource: S3SourceNetworkInfra
              OutputArtifacts:
                - Name: !Sub "${EnvPrefix}-NetworkInfra-Build"
              RunOrder: 1

  ECRImageCodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref ArtifactsBucket
        Type: S3
      Name: !Sub "${AWS::StackName}-ECRImage"
      RestartExecutionOnUpdate: False
      RoleArn: !GetAtt CodePipelineRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: Github-Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: "1"
              Configuration:
                ConnectionArn: "arn:aws:codestar-connections:ap-southeast-2:852998739144:connection/64ce87be-41f1-496d-a487-74dc9eab7726"
                FullRepositoryId: "ErandeAmit/ServianTechChallenge"
                BranchName: "develop"
                OutputArtifactFormat: "CODE_ZIP"
              OutputArtifacts:
                - Name: S3SourceECRImage
              RunOrder: 1
        - Name: !Sub "${EnvPrefix}-ECRImage-Build"
          Actions:
            - Name: !Sub "${EnvPrefix}-ECRImage-Build"
              InputArtifacts:
                - Name: S3SourceECRImage
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Region: !Ref AWS::Region
              Configuration:
                ProjectName: !Ref ECRImageBuild
                PrimarySource: S3SourceECRImage
              OutputArtifacts:
                - Name: !Sub "${EnvPrefix}-NetworkInfra-Build"
              RunOrder: 1
